enum UserRole {
  superuser
  admin
  reader
  editor
  tester
}

type UserType {
  id: ID
  username: String!
  email: String!
  password: String!
  role: UserRole!
  created_at: String
  updated_at: String
  posts: [PostType]
}

type PostType {
  id: ID!
  title: String!
  content: String!
  user: UserType!
  published: Boolean!
  categories: [CategoryType]
  created_at: String
  updated_at: String
  categoryPostsConnection: CategoryPostsConnection
}

type CategoryType {
  id: ID!
  name: String!
  posts: [PostType]
}

type CategoryPostsConnection {
  edges: [CategoryPostsEdge]
}
type CategoryPostsEdge {
  postId: Int!
  categoryId: Int!
}

input CreatePostInput {
  title: String!
  content: String!
  userId: ID!
  published: Boolean!
  categories: [Int!]!
}

input UpdatePostInput {
  id: ID!
  title: String!
  content: String!
  published: Boolean!
  categories: [Int!]!
}

type Query {
  posts: [PostType]
  users: [UserType]
  categories: [CategoryType]
}

type Mutation {
  createUser(username: String! email: String! password: String! role: UserRole!): UserType
  updateUser(id: ID! username: String email: String password: String role: UserRole): UserType
  deleteUser(id: ID!): UserType
  getUserById(id: ID!): UserType

  createPost(input: CreatePostInput!): PostType
  updatePost(input: UpdatePostInput!): PostType
  deletePost(id: ID!): PostType
  getPostsByTitle(title: String!): [PostType]
  getPostById(id: ID!): PostType

  createCategory(name: String!): CategoryType
  updateCategory(id: ID! name: String!): CategoryType
  deleteCategory(id: ID!): CategoryType
  getCategoryById(id: ID!): CategoryType
}