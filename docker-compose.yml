services:
  postgres_db:
    image: postgres:15
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - '${DB_PORT}:${DB_PORT}'
    networks:
      - prisma-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 5s
      timeout: 2s
      retries: 20

  # server:
  #   container_name: server
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - '${PORT}:${PORT}'
  #   stdin_open: true
  #   tty: true # Keeps the container running for debugging
  #   depends_on:
  #     postgres_db:
  #       condition: service_healthy
  #   env_file:
  #     - .env
  #   networks:
  #     - prisma-network

  # prisma-studio:
  #   image: node:lts-alpine3.17
  #   container_name: prisma-studio
  #   working_dir: /usr/src/app
  #   volumes:
  #     - .:/usr/src/app
  #   command: npx prisma studio --port ${PRISMA_STUDIO_PORT} --browser none
  #   ports:
  #     - '${PRISMA_STUDIO_PORT}:${PRISMA_STUDIO_PORT}'
  #   env_file:
  #     - .env
  #   networks:
  #     - prisma-network
  #   depends_on:
  #     postgres_db:
  #       condition: service_healthy
  #     server:
  #       condition: service_started

networks:
  prisma-network:
    name: prisma-network
